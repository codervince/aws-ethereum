# AWS Ethereum CloudFormation Stack
# Kenneth Falck <kennu@luottamuksenloyly.fi> 2016

AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  TeamId:
    Description: "Team ID"
    Default: "master"
    Type: "String"
  NetworkId:
    Description: "Network ID"
    Default: "42424242"
    Type: "String"
  KeyName:
    Description: "Key pair name"
    Default: "ethereum"
    Type: "String"
  InstanceType:
    Description: "Instance type"
    Default: "t2.micro"
    Type: "String"
  ImageId:
    Description: "Image AMI ID (default Ubuntu 16.04)"
    Default: "ami-07174474"
    Type: "String"
  VolumeSize:
    Description: "Instance volume size in GB"
    Default: "20"
    Type: "String"
  AvailabilityZone:
    Description: "Availability zone"
    Default: "eu-west-1a"
    Type: "String"
  Domain:
    Description: "Domain name for DNS names"
    Default: "blockchain-bootcamp.com"
    Type: "String"
  MasterAccountId:
    Description: "Master Account ID"
    Default: "e986f163e65361be0f08aa48dcc3a7b12a57baf0"
    Type: "String"

Conditions:
  IsMaster:
    "Fn::Equals":
      - !Ref TeamId
      - master
  IsNotMaster:
    "Fn::Not":
      - "Fn::Equals":
        - !Ref TeamId
        - master

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Ethereum security group"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: "0.0.0.0/0"
          IpProtocol: tcp
          FromPort: 30300
          ToPort: 30399
        - CidrIp: "0.0.0.0/0"
          IpProtocol: udp
          FromPort: 30300
          ToPort: 30399
  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupName: !Ref SecurityGroup
      SourceSecurityGroupName: !Ref SecurityGroup
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
  Volume1:
    Type: AWS::EC2::Volume
    Properties:
      Size: !Ref VolumeSize
      VolumeType: "gp2"
      AvailabilityZone: !Ref AvailabilityZone
  Node1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      AvailabilityZone: !Ref AvailabilityZone
      SecurityGroups:
        - !Ref SecurityGroup
      UserData:
        "Fn::Base64":
          "Fn::Join":
            - "\n"
            -
              - "#!/bin/bash -xe"
              - "export DEBIAN_FRONTEND=noninteractive"
              - !Sub "export NETWORK_ID=${NetworkId}"
              - !Sub "export TEAM_ID=${TeamId}"
              - !Sub "export MASTER_ACCOUNT_ID=${MasterAccountId}"
              - !Sub "export DOMAIN=${Domain}"
              - "apt-get install -y -q software-properties-common"
              - "add-apt-repository -y ppa:ethereum/ethereum"
              - "apt-get update -q"
              - "apt-get install -y -q ethereum solc apache2"
              - "curl -s -o /home/ubuntu/genesis.json https://raw.githubusercontent.com/luottamus/aws-ethereum/master/genesis.json"
              - "curl -s -o /home/ubuntu/ethereum.sh https://raw.githubusercontent.com/luottamus/aws-ethereum/master/ethereum.sh"
              - "curl -s -o /usr/lib/cgi-bin/ethereum.py https://raw.githubusercontent.com/luottamus/aws-ethereum/master/ethereum.py"
              - "curl -s -o /var/www/html/index.html https://raw.githubusercontent.com/luottamus/aws-ethereum/master/index.html"
              - "chmod 755 /home/ubuntu/ethereum.sh /usr/lib/cgi-bin/ethereum.py"
              - "touch /var/www/html/nodeinfo.json /var/www/html/ip.json"
              - "cp /home/ubuntu/genesis.json /var/www/html/genesis.json"
              - "chown ubuntu:ubuntu /home/ubuntu/* /var/www/html /var/www/html/* /usr/lib/cgi-bin/*"
              - "a2enmod cgid"
              - "echo 'export APACHE_RUN_USER=ubuntu' >> /etc/apache2/envvars"
              - "service apache2 restart"
              - "echo NETWORK_ID=$NETWORK_ID >> /etc/environment"
              - "echo TEAM_ID=$TEAM_ID >> /etc/environment"
              - "echo MASTER_ACCOUNT_ID=$MASTER_ACCOUNT_ID >> /etc/environment"
              - "echo DOMAIN=$DOMAIN >> /etc/environment"
              - "exec sudo -u ubuntu -E /home/ubuntu/ethereum.sh"
      Volumes:
        - Device: "xvdh"
          VolumeId: !Ref Volume1
      Tags:
        - Key: Name
          Value: !Sub "Ethereum-${TeamId}-1"
  Node1RecordSet:
    Type: "AWS::Route53::RecordSet"
    Condition:
      IsNotMaster
    Properties:
      Name:
        "Fn::Join":
          - ""
          -
            - !Ref TeamId
            - "."
            - !Ref Domain
            - "."
      HostedZoneName:
        "Fn::Join":
          - ""
          -
            - !Ref Domain
            - "."
      Type: "CNAME"
      TTL: "300"
      ResourceRecords:
        - !GetAtt Node1.PublicDnsName
  MasterIPAddress:
    Type: "AWS::EC2::EIPAssociation"
    Condition: IsMaster
    Properties:
      InstanceId: !Ref Node1
      AllocationId: eipalloc-ee112d8a

Outputs:
  Node1InstanceId:
    Description: "Node1 Instance Id"
    Value: !Ref Node1
  Node1PublicIp:
    Description: "Node1 Public Ip"
    Value: !GetAtt Node1.PublicIp
  Node1PublicDnsName:
    Condition: IsNotMaster
    Description: "Node1 Public DNS Name"
    Value: !Ref Node1RecordSet
